<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ Assembly Name="System.Core" #>
<#@ Assembly Name="System.Windows.Forms" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #> 

<#@ include file="$(ProjectDir)ModelAuto.ttinclude"	#>

<# var manager = new Manager(Host, GenerationEnvironment, true); #>

<# 
	//获取写入路径
	var projectPath = Path.GetDirectoryName(Path.GetDirectoryName(Host.TemplateFile+"..")+"..");
	var outputPath = Path.Combine(projectPath,"Mpn.Application\\Services");
	if (!Directory.Exists(outputPath))
	{
	    Directory.CreateDirectory(outputPath);
	}
#>

<#
	//读取来源Model
   var modelPath =  Path.Combine(projectPath,"Mpn.Domain\\Models");
   var modelFiles =  Directory.GetFiles(modelPath, "*.cs"); 
#>

<# 
    foreach(var file in modelFiles) 
    { 
		//已存在不写入，不存在自动创建
        var fileName = Path.GetFileNameWithoutExtension(file);
		if(!File.Exists(Path.Combine(outputPath,fileName+"AppService"+".cs")))
		{ 
			manager.StartBlock(fileName+"AppService"+".cs",outputPath);
		
#>
/*
 * T4自动生成，只生成一次，存在不覆盖
 */
using System;
using System.Collections.Generic;
using System.Text;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Mpn.IServices;
using Mpn.Dtos;
using Mpn.Models;

namespace Mpn.Services
{
    public class <#= fileName#>AppService : CrudAppService<<#= fileName#>, <#= fileName#>Dto, Guid, PagedAndSortedResultRequestDto,CreateUpdate<#= fileName#>Dto, CreateUpdate<#= fileName#>Dto>,I<#= fileName#>AppService
    {
        public <#= fileName#>AppService(IRepository<<#= fileName#>, Guid> repository) : base(repository)
        {

        }
    }
}

<# 
		manager.EndBlock(); 
        }
    }
	manager.Process(true);
#> 